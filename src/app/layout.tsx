"use client"

import "~/styles/globals.css";

import { GeistSans } from "geist/font/sans";
import { type Metadata } from "next";
import { ClerkProvider } from "@clerk/nextjs";
import { ToastContainer } from "react-toastify";
import SideNav from "./components/sideNav/sideNav";
import { useState } from "react";
import { scrollBarStyle, theme } from "./components/style";
import { isMobile } from "react-device-detect";
import AudioComponent from "./components/audio/audio";

import { Analytics } from "@vercel/analytics/react"
import { SpeedInsights } from "@vercel/speed-insights/next"

/*
export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};
*/

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const [sideNavOut, setSideNavOut] = useState(false);
  const [audioComponentDataNames, setAudioComponentDataNames] = useState<string[]>([])
  return (
    <html lang="en" className={`${GeistSans.variable}`}>
      <body>
        <ClerkProvider>
          <div className="flex flex-row">
            <SideNav {...{sideNavOut, setSideNavOut, audioComponentDataNames, setAudioComponentDataNames}}></SideNav>
            <div className={`flex-1 overflow-hidden h-screen relative ${scrollBarStyle} bg-[${theme.body}] text-[${theme.text}] flex flex-col ${isMobile ? "pt-8" : ""}`}>
              <div className="flex flex-1 h-screen overflow-auto dictionary-content-container">
                {children}
                <SpeedInsights />
                <Analytics />
              </div>
              {
                audioComponentDataNames.length > 0 && (
                  <AudioComponent dataNames={audioComponentDataNames}></AudioComponent>
                )
              }
            </div>
          </div>
          <ToastContainer stacked />
        </ClerkProvider>
      </body>
    </html>
  );
}
